# Server
server.port=8085
server.servlet.context-path=
spring.data.rest.base-path=
#server.servlet.context-path=/pokebible
#spring.data.rest.base-path=/pokebible

#server.servlet.contextPath=
#spring.application.name=cat-service
#management.server.servlet.context-path=/cat-service

# Authorize taking the hand on OPTION request (Don't work)
spring.mvc.dispatch-options-request=true

# Tymleaf
spring.template.cache=false

# Database H2  
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.url=jdbc:h2:file:D:\Users\olfize\h2
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# This is important : Need by custom persistence.validation.mode for isvalid() in constraint validator
spring.jpa.properties.javax.persistence.validation.mode=none

# Not Working : for validation outside the controller  
javax.persistence.validation.group.pre-persit=com.pokebible.PokemonValidationGroupOnInsert
spring.jpa.properties.javax.persistence.validation.group.pre-persit=com.pokebible.PokemonValidationGroupOnInsert

# Rest API   
spring.data.rest.basePath=/api
#springdoc.swagger-ui.disable-swagger-default-url=true
#springdoc.api-docs.path=/v3/api-docs
#springdoc.swagger-ui.configUrl=/v3/api-docs/

# all or annotated : annotated expose only class with @RepositoryRestResource or @RepositoryRestController or @RestController
#spring.data.rest.detection-strategy=all
spring.data.rest.detection-strategy=annotated

# HealtCheck
# Show details of health endpoint
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health,info,prometheus
management.endpoints.web.exposure.exclude=
#management.endpoints.web.exposure.include=prometheus

# Logs  
logging.level.root=WARN
logging.level.com.pokebible=INFO
logging.level.com.pokebible.PokemonService=INFO
logging.level.com.pokebible.actuator.Metric=INFO

#logging.pattern.console=%clr(%d{yy-MM-dd HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n
#logging.pattern.console=%clr(%date{yy-MM-dd HH:mm:ss.SSS}){blue} %clr(%-5level) %clr(%-50.50(%class.%method:%line)){blue}  %clr(%-30.30logger{30}){cyan} %clr(%-30.30method){cyan} %clr(%-4.4line){cyan} %clr(:){red} %clr(%m){faint}%n
#logging.pattern.console=%clr(%date{yy-MM-dd HH:mm:ss.SSS}){blue} %clr(%-5level) %clr(%-60.60(%class.%method:%line)){cyan} %clr(-){red} %clr(%m){faint}%n
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${hostName} --- [%15.15t] %-40.40c{1.} : %m%n%ex
#logging.pattern.console=%d{HH:mm:ss.SSS} %highlight(%-5level) [%10thread] %cyan(%-50logger{50}) - %msg%n
#logging.pattern.console=%clr(%date{yy-MM-dd HH:mm:ss.SSS}){blue} %clr(%-5level) %clr(%-100(%clr(%class) %clr(<%method>){cyan}:%clr(%line)){100}) %clr(-){red} %clr(%m){faint}%n
#logging.pattern.console=%magenta(%date{yy-MM-dd HH:mm:ss.SSS}) %highlight(%-5level) %clr(%-90(%highlight(%class{20}) %highlight(<%method{20}>) :%highlight(%line))) %clr(:){red} %highlight(%m){faint}%n
#logging.pattern.console=%clr(%d{yy-MM-dd HH:mm:ss.SSS}){blue} %highlight(%-5p) %clr(%-30.30logger{0}){cyan} %highlight(%-20.20method{0}) %clr(:) %highlight(%-3.3line{0}) %clr(---) %highlight(%m){faint}%n
logging.pattern.console=%clr(%d{yy-MM-dd HH:mm:ss.SSS}){blue} %highlight(%-5p) %highlight([%15.15t]) %clr(%-30.30class{30}){cyan} %highlight(%-30.30method{30}) %clr(:) %highlight(%-3.3line{0}) %clr(---) %highlight(%m){faint}%n
